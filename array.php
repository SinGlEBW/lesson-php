<?php

  $arr = [];//обычный массив(сокр. запись). Можно ['value1','value2',] или ["key1"=>"value1", "key2"=>"value2"];
  $arr1 = Array("key1"=>"value1", "key2"=>"value2");//ассоциативный массив, типа как объект, но записывается не как в js   

  $arr1["key1"];
  $arr2 = Array("key1"=>"value1", "key2"=>Array("key1.1"=>"value1.1","key1.2"=>"value1.2"));//  Массив с массивом.

  echo $arr2["key2"]["key1.1"];//обращение к ключам массива в массиве


/*
	1. в php именованный массив(ассоциативный) в консоли будет показывать как объект, но это для php не объект
		 обращаться к ключам по -> не выйдет, только ['key'].
	2. $newArr['key'] = "строка"  - в js так же можно создать ключ в объекте и добавить что-то, но если мы в js ходим добавить на ключ
																	массив в котором будет объект делаем это так
																	obj['key'] = [ { } ] а в цикле могли пушить obj['key'] = [ ...item ] в php выглядит так
																	$arrObj['key'][] = new MyObj() || [];
*/

/* т.к. php это по большей части функциональное программирование, то...








?>